[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=62.3"]

[project]
name = "aioblackbird24180"
# The version is set by GH action on release
authors = [{ name = "alexyao2015" }]
classifiers = [
  "Environment :: Console",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = []
description = "Python module to control Monoprice 24180 Blackbird 8x8 HDMI Matrix."
license = { text = "Apache-2.0" }
readme = "README.md"
requires-python = ">=3.11"
version = "0.0.1"

[project.urls]
Homepage = "https://github.com/alexyao2015/aioblackbird24180"
Repository = "https://github.com/alexyao2015/aioblackbird24180"

[project.optional-dependencies]
test = [
  "codespell==2.3.0",
  "mypy==1.14.0",
  "pre-commit==4.0.1",
  "pre-commit-hooks==5.0.0",
  "pylint==3.3.3",
  "pytest==8.3.4",
  "pytest-asyncio==0.25.0",
  "pytest-cov==6.0.0",
  "pytest-xdist==3.6.1",
  "ruff==0.8.6",
  "safety==3.2.14",
  "tomli==2.2.1",
]

[tool.codespell]
ignore-words-list = "dependees,"

[tool.setuptools]
include-package-data = true
platforms = ["any"]
zip-safe = false

[tool.setuptools.package-data]
aioblackbird24180 = ["py.typed"]

[tool.setuptools.packages.find]
include = ["aioblackbird24180*"]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
follow_imports = "skip"
ignore_missing_imports = true
no_implicit_optional = true
no_implicit_reexport = true
platform = "linux"
python_version = "3.12"
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pylint.BASIC]
good-names = ["_", "T"]

[tool.pylint.DESIGN]
max-args = 10
max-attributes = 14

[tool.pylint."MESSAGES CONTROL"]
disable = [
  "duplicate-code",                            # unavoidable
  "format",                                    # unavoidable
  "unsubscriptable-object",                    # unavoidable
  "unused-argument",                           # handled by ruff
  "unspecified-encoding",                      # handled by ruff
  "isinstance-second-argument-not-valid-type", # conflict with ruff
  "fixme",                                     # we're still developing
  "too-few-public-methods",                    # unavoidable
]

[tool.pylint.SIMILARITIES]
ignore-imports = true

[tool.pylint.FORMAT]
max-line-length = 88

[tool.pylint.VARIABLES]
allowed-redefined-builtins = ["input"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s.%(msecs)03d [%(levelname)-7s] [%(filename)s:%(lineno)3s:%(funcName)31s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
log_file_level = "DEBUG"
log_file_format = "%(asctime)s.%(msecs)03d [%(levelname)-7s] [%(filename)s:%(lineno)3s:%(funcName)31s] %(message)s"
log_file_date_format = "%Y-%m-%d %H:%M:%S"
log_file = "pytest.log"
addopts = "--cov --cov-report xml:cov.xml --cov-report html:coverage -n auto -vv"
asyncio_mode = "auto"

[tool.ruff]
fix = true
line-length = 88
show-fixes = true
target-version = "py312"

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings.
convention = "pep257"

[tool.ruff.lint]
ignore = [
  "ANN002",  # Just annoying, not really useful
  "ANN003",  # Just annoying, not really useful
  "ANN101",  # Self... explanatory
  "ANN401",  # Opinioated warning on disallowing dynamically typed expressions
  "D203",    # Conflicts with other rules
  "D213",    # Conflicts with other rules
  "D417",    # False positives in some occasions
  "EM101",   # Just annoying, not really useful
  "EM102",   # Just annoying, not really useful
  "FIX002",  # Just annoying, not really useful
  "PLR2004", # Just annoying, not really useful
  "PD011",   # Just annoying, not really useful
  "TCH001",  # Just annoying, not really useful
  "TCH003",  # Just annoying, not really useful
  "S101",    # assert is often used to satisfy type checking
  "TD002",   # Just annoying, not really useful
  "TD003",   # Just annoying, not really useful
  "TD004",   # Just annoying, not really useful
  "COM812",  # Conflict with the Ruff formatter
  "ISC001",  # Conflict with the Ruff formatter
  "A002",    # Shadow built-in, allows shadowing input for better readability
  "A001",    # Shadow built-in, allows shadowing input for better readability
  "TRY003",  # Annoying, not really useful
]

select = ["ALL"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["aioblackbird24180"]

[tool.ruff.lint.mccabe]
max-complexity = 25

[tool.ruff.lint.pylint]
max-args = 10
max-branches = 25
max-returns = 15
max-statements = 50
